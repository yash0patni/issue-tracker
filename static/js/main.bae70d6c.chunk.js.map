{"version":3,"sources":["data/IssueApi.js","actions/ActionTypes.js","actions/IssueActions.js","components/Issue.js","components/IssueList.js","components/ViewIssue.js","components/EditIssue.js","components/IssueCard.js","components/IssueGrid.js","components/AlertDialog.js","components/SearchFilter.js","components/AllIssuesPage.js","components/About.js","components/AddIssue.js","data/UserApi.js","actions/UserActions.js","components/Header.js","components/Login.js","components/IssueChart.js","components/Welcome.js","components/Signup.js","components/UserProfile.js","App.js","reducers/initialState.js","reducers/userState.js","reducers/index.js","reducers/issueReducer.js","reducers/userReducer.js","index.js","store/configureStore.js"],"names":["URL","IssueApi","searchString","cb","axios","get","res","data","issue","id","post","put","delete","console","log","INITIALIZE","ADD_ISSUE","DELETE_ISSUE","EDIT_ISSUE","LOGIN_USER","LOGOUT_USER","SIGNUP_USER","addIssue","dispatch","saveIssue","newIssue","type","ActionTypes","editIssue","deleteIssue","initIssues","getAllIssue","initialIssues","issues","connect","state","users","actions","bindActionCreators","IssueActions","withRouter","props","index","customization","TableRow","TableCell","onClick","isAuthenticated","history","push","setAlertOpen","style","color","fontSize","to","description","severity","status","createdDate","lastUpdated","resolvedDate","lastUpdatedBy","lastUpdatedByName","loggedBy","loggedByName","Button","size","startIcon","window","confirm","TableContainer","component","Paper","Table","aria-label","TableHead","backgroundColor","TableBody","map","useStyles","makeStyles","root","padding","display","justifyContent","flexDirection","alignItems","title","classes","useParams","find","className","Card","width","CardContent","Typography","gutterBottom","variant","marginTop","formControl","minWidth","React","useState","isDirty","setIsDirty","isLoading","setIsLoading","setIssue","useEffect","a","getIssue","handleChange","event","target","name","value","onSubmit","preventDefault","updatedIssue","moment","format","firstName","lastName","onChange","autoComplete","TextField","label","FormControl","InputLabel","Select","labelId","MenuItem","FormLabel","RadioGroup","FormControlLabel","control","Radio","fullWidth","when","message","maxWidth","CardActionArea","CardActions","Grid","container","spacing","item","xs","sm","md","handleClose","Dialog","open","alertOpen","onClose","aria-labelledby","aria-describedby","DialogTitle","dialogTitle","DialogContent","DialogContentText","dialogMessage","DialogActions","autoFocus","formClass","flexWrap","setDescription","setSeverity","setStatus","handleStatusChange","checked","handleSeverityChange","severityCheckBox","Object","entries","key","Checkbox","statusCheckBox","paddingLeft","forEach","length","slice","toggleDrawer","FormGroup","Minor","Major","Critical","Open","InProgress","Closed","nav","paddingRight","paddingBottom","navRight","link","list","view","setView","searchDrawer","setSearchDrawer","setState","setOpen","path","exact","SwipeableDrawer","onOpen","role","IssueGrid","keys","k","disabled","toUpperCase","replace","substring","About","href","rel","theme","validationSchema","yup","required","formik","useFormik","initialValues","v4","values","handleSubmit","error","touched","Boolean","errors","helperText","UserApi","user","password","loginUser","userData","signupUser","logoutUser","flexGrow","menuButton","marginRight","navbarItem","textDecoration","fontFamily","isActive","userActions","UserActions","anchorEl","setAnchorEl","AppBar","position","Toolbar","activeClassName","alert","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","setData","Collapse","in","Alert","chart","statusOpen","filter","statusInProgress","statusClosed","severityMinor","severityMajor","severityCritical","chartType","loader","options","rootProps","height","contact","location","textAlign","rootReducer","combineReducers","initialState","action","assign","updatedState1","updatedState","userState","store","createStore","applyMiddleware","thunk","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bae70d6c.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\nconst URL =\r\n  \"https://my-json-server.typicode.com/yash0patni/issue_tracker_server\"\r\n\r\nclass IssueApi {\r\n  static async getAllIssue(searchString, cb) {\r\n    const res = await axios.get(\r\n      `${URL}/issues?_sort=lastUpdated&_order=desc${searchString}`\r\n    )\r\n    cb(res.data)\r\n  }\r\n\r\n  static async getIssue(issue) {\r\n    const res = await axios.get(`${URL}/issues/${issue.id}`)\r\n    return res.data\r\n  }\r\n\r\n  static async saveIssue(issue, cb) {\r\n    const res = await axios.post(`${URL}/issues`, issue, {\r\n      \"Content-Type\": \"application/json\",\r\n    })\r\n    cb(res.data)\r\n  }\r\n\r\n  static async editIssue(issue, cb) {\r\n    const res = await axios.put(`${URL}/issues/${issue.id}`, issue, {\r\n      \"Content-Type\": \"application/json\",\r\n    })\r\n    cb(res.data)\r\n  }\r\n\r\n  static async deleteIssue(issue, cb) {\r\n    const res = await axios.delete(`${URL}/issues/${issue.id}`)\r\n    console.log(\"deleteIssue IssueApi\", res)\r\n    cb(res.data)\r\n  }\r\n}\r\n\r\nexport default IssueApi\r\n","export const INITIALIZE = \"INITIALIZE\";\nexport const ADD_ISSUE = \"ADD_ISSUE\";\nexport const DELETE_ISSUE = \"DELETE_ISSUE\";\nexport const EDIT_ISSUE = \"EDIT_ISSUE\";\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\nexport const SIGNUP_USER = \"SIGNUP_USER\";","import IssueApi from \"../data/IssueApi\";\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport function addIssue(issue) {\r\n  //console.log(\"addIssue\");\r\n  return function (dispatch) {\r\n    return IssueApi.saveIssue(issue, (newIssue) => \r\n      dispatch({\r\n        type: ActionTypes.ADD_ISSUE,\r\n        issue: newIssue,\r\n      })  \r\n    )\r\n  }\r\n}\r\n\r\nexport function editIssue(issue) {\r\n  //console.log(\"editIssue\");\r\n  return function (dispatch) {\r\n    return IssueApi.editIssue(issue, () =>\r\n      dispatch({\r\n        type: ActionTypes.EDIT_ISSUE,\r\n        issue: issue,\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport function deleteIssue(issue) {\r\n  //console.log(\"deleteIssue\");\r\n  return function (dispatch) {\r\n    return IssueApi.deleteIssue(issue, () =>\r\n      dispatch({\r\n        type: ActionTypes.DELETE_ISSUE,\r\n        id: issue.id,\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport function initIssues(searchString) {\r\n  //console.log(\"initIssues\");\r\n  return function (dispatch) {\r\n    return IssueApi.getAllIssue(searchString, initialIssues => \r\n      dispatch({\r\n        type: ActionTypes.INITIALIZE,\r\n        issues: initialIssues,\r\n      })  \r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport { TableRow, TableCell, Button} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as IssueActions from \"../actions/IssueActions\";\r\n\r\nconst Issue = (props) => {\r\n  const issue = props.issue;\r\n  const index = props.index;\r\n  const customization = props.customization;\r\n\r\n  return (\r\n    <TableRow>\r\n      <TableCell>{index + 1}</TableCell>\r\n      <TableCell>\r\n        <Link\r\n          onClick={() => {\r\n            props.users.isAuthenticated\r\n            ? props.history.push(`issues/view/${issue.id}`)\r\n            : props.setAlertOpen(true);\r\n            /*\r\n            if (window.confirm(\"Are you sure you want to view the details?\"))\r\n              props.history.push(`issues/${issue.id}`);\r\n            else\r\n              props.history.push('/issues');\r\n            */\r\n          }}\r\n          style={{ color: \"blue\", fontSize: \"16px\" }}\r\n          to=\"#\"\r\n        >\r\n          {issue.description}\r\n        </Link>\r\n      </TableCell>\r\n      {\r\n        customization.severity\r\n          ? <TableCell>{issue.severity}</TableCell>\r\n          : null    \r\n      }\r\n      {\r\n        customization.status\r\n          ? <TableCell>{issue.status}</TableCell>\r\n          : null    \r\n      }\r\n      {\r\n        customization.createdDate\r\n          ? <TableCell>{issue.createdDate}</TableCell>\r\n          : null    \r\n      }\r\n      {\r\n        customization.lastUpdated\r\n          ? <TableCell>{issue.lastUpdated}</TableCell>\r\n          : null    \r\n      }\r\n      {\r\n        customization.resolvedDate\r\n          ? <TableCell>{issue.resolvedDate ? issue.resolvedDate : \"Not resolved\"}</TableCell>\r\n          : null    \r\n      }\r\n      {\r\n        customization.lastUpdatedBy\r\n          ? <TableCell>{issue.lastUpdatedByName}</TableCell>\r\n          : null    \r\n      }\r\n      {\r\n        customization.loggedBy\r\n          ? <TableCell>{issue.loggedByName}</TableCell>\r\n          : null    \r\n      }\r\n      <TableCell>\r\n        <Button \r\n          onClick={() => {\r\n            props.users.isAuthenticated \r\n            ? props.history.push(`issues/edit/${issue.id}`)\r\n            : props.setAlertOpen(true);\r\n          }}\r\n          size=\"small\" \r\n          color=\"primary\" \r\n          startIcon={<EditIcon />}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </TableCell>\r\n      <TableCell>\r\n        <Button\r\n          onClick={() => {\r\n            props.users.isAuthenticated\r\n            ? window.confirm(\"Are you sure you want to delete this issue?\")\r\n            ? props.actions.deleteIssue(issue) : console.log()\r\n            : props.setAlertOpen(true);\r\n          }}\r\n          size=\"small\" \r\n          color=\"secondary\"\r\n          startIcon={<DeleteIcon />}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    issues: state.issues,\r\n    users: state.users,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(IssueActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Issue));\r\n","import React from \"react\";\r\nimport Issue from \"./Issue\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as IssueActions from \"../actions/IssueActions\";\r\n\r\nconst IssueList = (props) => {\r\n  const customization = props.customization;\r\n  \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead style={{ backgroundColor: \"#3F51B5\" }}>\r\n          <TableRow>\r\n            <TableCell style={{ color: \"white\" }}>Id</TableCell>\r\n            <TableCell style={{ color: \"white\" }}>Issue Description</TableCell>\r\n            {\r\n              customization.severity\r\n                ? <TableCell style={{ color: \"white\" }}>Severity</TableCell>\r\n                : null    \r\n            }\r\n            {\r\n              customization.status\r\n                ? <TableCell style={{ color: \"white\" }}>Status</TableCell>\r\n                : null    \r\n            }\r\n            {\r\n              customization.createdDate\r\n                ? <TableCell style={{ color: \"white\" }}>Created Date</TableCell>\r\n                : null    \r\n            }\r\n            {\r\n              customization.lastUpdated\r\n                ? <TableCell style={{ color: \"white\" }}>Last Updated</TableCell>\r\n                : null    \r\n            }\r\n            {\r\n              customization.resolvedDate\r\n                ? <TableCell style={{ color: \"white\" }}>Resolved Date</TableCell>\r\n                : null    \r\n            }\r\n            {\r\n              customization.lastUpdatedBy\r\n                ? <TableCell style={{ color: \"white\" }}>Last Updated By</TableCell>\r\n                : null    \r\n            }\r\n            {\r\n              customization.loggedBy\r\n                ? <TableCell style={{ color: \"white\" }}>Logged By</TableCell>\r\n                : null    \r\n            }\r\n            <TableCell style={{ color: \"white\" }}>Edit</TableCell>\r\n            <TableCell style={{ color: \"white\" }}>Delete</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.issues && props.issues.map((issue, index) => (\r\n            <Issue setAlertOpen={props.setAlertOpen} key={issue.id} issue={issue} index={index} customization={customization} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    issues: state.issues,\r\n    users: state.users,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(IssueActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(IssueList));\r\n","import React from \"react\";\r\nimport { Link, Redirect, useParams, withRouter } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as IssueActions from \"../actions/IssueActions\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    padding: \"10px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nconst ViewIssue = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const {id} = useParams();\r\n  const issue = props.issues.find(issue => issue.id === id);\r\n  \r\n  if (!props.users.isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Link to='/issues'>Back</Link>\r\n      <h1>Issue Details</h1>\r\n      {\r\n        issue\r\n        ? (\r\n          <div>\r\n            <Card style={{width: \"80vw\"}}>\r\n              <CardContent>\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                  Last Updated- <b>{issue.lastUpdated}</b> by- <b>{issue.lastUpdatedByName}</b>\r\n                </Typography>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {issue.description}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Severity- <b>{issue.severity}</b>\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  Status- <b>{issue.status}</b>\r\n                </Typography>\r\n                <Typography style={{marginTop: \"10px\"}} variant=\"body2\" component=\"p\">\r\n                  {issue.createdDate + \" - \" + issue.resolvedDate}\r\n                </Typography>\r\n                <Typography style={{marginTop: \"10px\"}} variant=\"body2\" component=\"h2\">\r\n                  Logged By- <b>{issue.loggedByName}</b>\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n            </div>\r\n        )\r\n        : (<b>No issue with id: {id}</b>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  //console.log(\"[AllIssuesPage] \", state);\r\n  return {\r\n    issues: state.issues,\r\n    users: state.users,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(IssueActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ViewIssue));\r\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n  Button,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  TextField,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\"\nimport { Link, withRouter, useParams, Redirect, Prompt } from \"react-router-dom\"\nimport moment from \"moment\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport * as IssueActions from \"../actions/IssueActions\"\nimport axios from \"axios\"\n\nconst useStyles = makeStyles({\n  root: {\n    padding: \"10px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  formControl: {\n    minWidth: 350,\n  },\n})\n\nconst EditIssue = (props) => {\n  const classes = useStyles()\n  const { id } = useParams()\n\n  const [isDirty, setIsDirty] = React.useState(false)\n  const [isLoading, setIsLoading] = React.useState(true)\n  const [issue, setIssue] = React.useState({})\n\n  React.useEffect(() => {\n    setIsLoading(true)\n    const getIssue = async () => {\n      const res = await axios.get(\n        `https://my-json-server.typicode.com/yash0patni/issue_tracker_server/issues/${id}`\n      )\n      setIssue(res.data)\n      setIsLoading(false)\n    }\n\n    getIssue()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleChange = (event) => {\n    setIssue({ ...issue, [event.target.name]: event.target.value })\n  }\n\n  const onSubmit = (event) => {\n    setIsDirty(false)\n    event.preventDefault()\n\n    const updatedIssue = {\n      id: issue.id,\n      description: issue.description,\n      severity: issue.severity,\n      status: issue.status,\n      createdDate: issue.createdDate,\n      lastUpdated: moment().format(\"MMMM Do YYYY\"),\n      resolvedDate:\n        issue.status === \"Closed\" ? moment().format(\"MMMM Do YYYY\") : null,\n      loggedBy: issue.loggedBy,\n      lastUpdatedBy: props.users.id,\n      loggedByName: issue.loggedByName,\n      lastUpdatedByName: props.users.firstName + \" \" + props.users.lastName,\n    }\n    //console.log(updatedIssue);\n    props.actions.editIssue(updatedIssue)\n    props.history.push(\"/issues\")\n  }\n\n  if (!props.users.isAuthenticated) {\n    return <Redirect to=\"/\" />\n  }\n\n  return isLoading ? (\n    <p>Loading...</p>\n  ) : (\n    <div className={classes.root}>\n      <Link to=\"/issues\">Back</Link>\n      <h2>Edit Issue</h2>\n      <form\n        onSubmit={onSubmit}\n        onChange={() => setIsDirty(true)}\n        autoComplete=\"off\"\n      >\n        <TextField\n          className={classes.formControl}\n          id=\"description\"\n          label=\"Description\"\n          name=\"description\"\n          value={issue.description}\n          onChange={handleChange}\n        />\n        <br></br>\n        <br></br>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"severity\">Severity</InputLabel>\n          <Select\n            labelId=\"Severity\"\n            id=\"severity\"\n            name=\"severity\"\n            value={issue.severity}\n            onChange={handleChange}\n          >\n            <MenuItem key=\"1\" value={\"Critical\"}>\n              Critical\n            </MenuItem>\n            <MenuItem key=\"2\" value={\"Major\"}>\n              Major\n            </MenuItem>\n            <MenuItem key=\"3\" value={\"Minor\"}>\n              Minor\n            </MenuItem>\n          </Select>\n        </FormControl>\n        <br></br>\n        <br></br>\n        <br></br>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Status</FormLabel>\n          <RadioGroup\n            aria-label=\"Status\"\n            name=\"status\"\n            value={issue.status}\n            onChange={handleChange}\n          >\n            <FormControlLabel value=\"Open\" control={<Radio />} label=\"Open\" />\n            <FormControlLabel\n              value=\"In Progress\"\n              control={<Radio />}\n              label=\"In Progress\"\n            />\n            <FormControlLabel\n              value=\"Closed\"\n              control={<Radio />}\n              label=\"Closed\"\n            />\n          </RadioGroup>\n        </FormControl>\n        <br></br>\n        <br></br>\n        <Button\n          fullWidth\n          onClick={() => setIsDirty(false)}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Save\n        </Button>\n      </form>\n      <Prompt\n        when={isDirty}\n        message=\"All changes will be lost, Are you sure you want to continue ?\"\n      />\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    issues: state.issues,\n    users: state.users,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(IssueActions, dispatch),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(EditIssue))\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardActionArea, CardContent, Typography, CardActions, Button } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"../actions/IssueActions\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n  },\n  title: {\n    fontSize: 14,\n  },\n});\n\nconst IssueCard = (props) => {\n  const classes = useStyles();\n\n  const issue = props.issue;\n  const customization = props.customization;\n  //const index = props.index;\n  return (\n    <Card className={classes.root}>\n      <CardActionArea \n        onClick={() => {\n          props.users.isAuthenticated\n          ? props.history.push(`issues/view/${issue.id}`)\n          : props.setAlertOpen(true);\n        }}\n      >\n        <CardContent>\n          {\n            customization.lastUpdated && \n            <Typography id=\"lastUpdated\" className={classes.title} color=\"textSecondary\" gutterBottom>\n              Last updated at- {issue.lastUpdated}\n            </Typography>\n          }\n          {\n            customization.lastUpdatedBy &&\n            <Typography id=\"lastUpdatedBy\" className={classes.title} color=\"textSecondary\" gutterBottom>\n              Last updated by- {issue.lastUpdatedByName}\n            </Typography>\n          }\n          {\n            customization.description &&\n            <Typography id=\"description\" gutterBottom variant=\"h5\" component=\"h2\">\n              {issue.description}\n            </Typography>\n          }\n          {\n            customization.severity &&\n            <Typography id=\"severity\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Severity- {issue.severity}\n            </Typography>\n          }\n          {\n            customization.status &&\n            <Typography id=\"status\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Status- {issue.status}\n            </Typography>\n          }\n          <Typography style={{marginTop: \"10px\"}} variant=\"body2\" component=\"p\">\n            {customization.createdDate ? issue.createdDate : null}\n            {customization.createdDate && customization.resolvedDate ? \" - \" : null}\n            {customization.resolvedDate ? (issue.resolvedDate ? issue.resolvedDate : \"Not resolved\") : null}\n          </Typography>\n          <Typography style={{marginTop: \"10px\"}} variant=\"body2\" component=\"h2\">\n            {customization.loggedBy ? `Logged By- ${issue.loggedByName}`: null}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button\n          id=\"editButton\"\n          onClick={() => {\n            props.users.isAuthenticated \n            ? props.history.push(`issues/edit/${issue.id}`)\n            : props.setAlertOpen(true);\n            /*props.users.isAuthenticated \n            ? props.history.push(`issues/edit/${issue.id}`)\n            : window.confirm(\"You are not logged in, head over to login page?\")\n            ? props.history.push(\"/\")\n            : props.history.push(\"/issues\");*/\n          }}\n          size=\"small\"\n          color=\"primary\" \n          startIcon={<EditIcon />}\n        >\n          Edit\n        </Button>\n        <Button\n          onClick={() => {\n            props.users.isAuthenticated\n            ? window.confirm(\"Are you sure you want to delete this issue?\")\n            ? props.actions.deleteIssue(issue) : console.log()\n            : props.setAlertOpen(true);\n          }}\n          size=\"small\" \n          color=\"secondary\"\n          startIcon={<DeleteIcon />}\n        >\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    issues: state.issues,\n    users: state.users,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(IssueActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(IssueCard));\n","import React from \"react\";\nimport IssueCard from \"./IssueCard\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"../actions/IssueActions\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"10px\"\n  },\n});\n\nconst IssuesGrid = (props) => {\n  const classes = useStyles();\n  //console.log(props);\n  //console.log(props.issues.issues);\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2} >\n        {props.issues && props.issues.map((issue, index) => (\n          <Grid key={issue.id} item xs={12} sm={6} md={4}>\n            <IssueCard\n              setAlertOpen={props.setAlertOpen}\n              issue={issue}\n              index={index}\n              customization={props.customization}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  //console.log(\"[IssueGrid]\", state);\n  return {\n    issues: state.issues,\n    users: state.users,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(IssueActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(IssuesGrid));\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withRouter } from 'react-router';\n\nconst AlertDialog = (props) => {\n  //console.log(\"[AlertDialog.js]\", props);\n\n  const handleClose = () => {\n    props.setAlertOpen(false);\n  };\n\n  return (\n    <div>\n      {/*<Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>*/}\n      <Dialog\n        open={props.alertOpen}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.dialogTitle}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.dialogMessage}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => {\n              handleClose();\n              props.history.push(\"/\");\n            }} \n            color=\"primary\"\n          >\n            Yes\n          </Button>\n          <Button onClick={handleClose} color=\"secondary\" autoFocus>\n            No\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default withRouter(AlertDialog);","import React, { useState } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"../actions/IssueActions\";\nimport { Button, TextField, FormControl, FormGroup, FormControlLabel, Checkbox, FormLabel } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  formClass: {\n    display: \"flex\",\n    //width: \"100vw\",\n    //justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    flexDirection: \"column\",\n    //alignItems: \"center\",\n    padding: \"10px\",\n  }\n});\n\nconst SearchFilter = (props) => {\n  const classes = useStyles();\n\n  /*\n  const [description, setDescription] = useState(\"\");\n  const [severity, setSeverity] = useState({\n    Minor: false,\n    Major: false,\n    Critical: false\n  });\n  const [status, setStatus] = useState({\n    Open: false,\n    InProgress: false,\n    Closed: false\n  });\n  */\n\n  const [description, setDescription] = useState(props.description);\n  const [severity, setSeverity] = useState(props.severity);\n  const [status, setStatus] = useState(props.status);\n\n  const handleStatusChange = (event) => {\n    setStatus({...status, [event.target.name]: event.target.checked});\n    props.setStatus({...status, [event.target.name]: event.target.checked});\n  }\n\n  const handleSeverityChange = (event) => {\n    setSeverity({...severity, [event.target.name]: event.target.checked});\n    props.setSeverity({...severity, [event.target.name]: event.target.checked});\n  }\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n    props.setDescription(event.target.value);\n  }\n\n  const setInitialState = () => {\n    setDescription(\"\");\n    props.setDescription(\"\");\n    setSeverity({\n      Minor: false,\n      Major: false,\n      Critical: false\n    });\n    props.setSeverity({\n      Minor: false,\n      Major: false,\n      Critical: false\n    });\n    setStatus({\n      Open: false,\n      InProgress: false,\n      Closed: false\n    });\n    props.setStatus({\n      Open: false,\n      InProgress: false,\n      Closed: false\n    });\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    let searchString = \"&\";\n    Object.entries(severity).forEach(([key, value]) => {\n      if (value) {\n        searchString = searchString + `severity=${key}&`;\n      }\n    })\n    Object.entries(status).forEach(([key, value]) => {\n      if (value) {\n        searchString = searchString + `status=${key === \"InProgress\" ? \"In Progress\" : key}&`;\n      }\n    })\n    description.length > 0 ? searchString = searchString + `description_like=${description}` : searchString = searchString.slice(0,-1);\n    //console.log(searchString);\n    //console.log(props);\n    props.toggleDrawer(false);\n    props.actions.initIssues(searchString);\n  }\n\n  const severityCheckBox = Object.entries(severity).map(([key, value]) => {\n    //console.log(key, value)\n    return (\n      <FormControlLabel\n        key={key}\n        control={\n          <Checkbox\n            color=\"primary\"\n            checked={value} \n            onChange={handleSeverityChange} \n            name={key} />}\n        label={key}\n      />\n    )\n  })\n\n  const statusCheckBox = Object.entries(status).map(([key, value]) => {\n    //console.log(key, value)\n    return (\n      <FormControlLabel\n        key={key}\n        control={\n          <Checkbox\n            color=\"primary\"\n            checked={value} \n            onChange={handleStatusChange} \n            name={key} />}\n        label={key}\n      />\n    )\n  })\n\n  return (\n    <>\n      <h2 style={{paddingLeft: \"10px\"}}>Apply Filters</h2>\n      <form className={classes.formClass} onSubmit={onSubmit}>\n        <TextField\n          id=\"description\"\n          name=\"description\"\n          label=\"Description\"\n          value={description}\n          onChange={handleDescriptionChange}\n        />\n        <br></br>\n        <br></br>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Severity</FormLabel>\n          <FormGroup className=\"col\">\n            {severityCheckBox}\n          </FormGroup>\n        </FormControl>\n        <br></br>\n        <br></br>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Status</FormLabel>\n          <FormGroup>\n            {statusCheckBox}\n          </FormGroup>\n        </FormControl>\n        <br></br>\n        <br></br>\n        <div>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Apply\n          </Button>\n          &nbsp;&nbsp;\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => {\n              setInitialState();\n              props.toggleDrawer(false);\n              props.actions.initIssues(\"\");\n            }}\n          >\n            Clear\n          </Button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    issues: state.issues,\n    users: state.users,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(IssueActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SearchFilter));\n","import React, { useState } from \"react\";\r\nimport IssueList from \"./IssueList\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport ViewIssue from \"./ViewIssue\";\r\nimport EditIssue from \"./EditIssue\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as IssueActions from \"../actions/IssueActions\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { SwipeableDrawer, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormGroup, FormControlLabel, Switch as UiSwitch } from \"@material-ui/core\";\r\nimport IssueGrid from \"./IssueGrid\";\r\nimport AlertDialog from \"./AlertDialog\";\r\nimport SearchFilter from \"./SearchFilter\";\r\n\r\nconst useStyles = makeStyles({\r\n  nav: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n    alignItems: \"center\",\r\n    //paddingTop: \"10px\",\r\n    paddingLeft: \"10px\",\r\n    paddingRight: \"10px\",\r\n    paddingBottom: 0\r\n  },\r\n  navRight: {\r\n    display: \"flex\",\r\n    paddingRight: \"10px\",\r\n    //margin: \"10px\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  link: {\r\n    color: \"#3F51B5\",\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n});\r\n\r\nconst AllIssuesPage = (props) => {\r\n  const classes = useStyles();\r\n  // view = true means grid view\r\n  const [view, setView] = useState(true);\r\n  //console.log(props);\r\n  const [searchDrawer, setSearchDrawer] = useState(false);\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n  const [severity, setSeverity] = useState({\r\n    Minor: false,\r\n    Major: false,\r\n    Critical: false\r\n  });\r\n  const [status, setStatus] = useState({\r\n    Open: false,\r\n    InProgress: false,\r\n    Closed: false\r\n  });\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setSearchDrawer(open);\r\n  };\r\n\r\n  const list = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      //onClick={toggleDrawer(false)}\r\n      //onKeyDown={toggleDrawer(false)}\r\n    >\r\n      <div className={classes.nav}>\r\n        <SearchFilter\r\n          toggleDrawer={setSearchDrawer}\r\n          description={description}\r\n          setDescription={setDescription}\r\n          status={status}\r\n          setStatus={setStatus}\r\n          severity={severity}\r\n          setSeverity={setSeverity}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const [state, setState] = useState({\r\n    description: true,\r\n    severity: true,\r\n    status: true,\r\n    createdDate: true,\r\n    resolvedDate: true,\r\n    lastUpdated: true,\r\n    lastUpdatedBy: true,\r\n    loggedBy: true,\r\n  });\r\n\r\n\tconst handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [alertOpen, setAlertOpen] = useState(false);\r\n\r\n  const [dialogTitle] = useState(\"Not Authenticated\");\r\n  const [dialogMessage] = useState(\"You are not logged in, head over to login page for performing this action?\");\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path=\"/issues\" exact>\r\n          <div className={classes.nav}>\r\n            <h2>All Issues</h2>\r\n            <div className={classes.navRight}>\r\n              <Button\r\n                id=\"listViewButton\"\r\n                onClick={() => setView(false)}\r\n                size=\"small\" \r\n                color=\"primary\"\r\n                startIcon={<ListIcon />}\r\n              >\r\n                List View\r\n              </Button>\r\n              &nbsp;&nbsp;\r\n              <Button\r\n                id=\"gridViewButton\"\r\n                onClick={() => setView(true)}\r\n                size=\"small\" \r\n                color=\"primary\"\r\n                startIcon={<AppsIcon />}\r\n              >\r\n                Grid View\r\n              </Button>\r\n              &nbsp;&nbsp;\r\n              <Button\r\n                id=\"customizeButton\"\r\n                onClick={handleClickOpen}\r\n                size=\"small\" \r\n                color=\"primary\"\r\n                startIcon={<BuildIcon />}\r\n              >\r\n                Customize Fields\r\n              </Button>\r\n              <Button\r\n                id=\"searchButton\"\r\n                onClick={toggleDrawer(true)}\r\n                size=\"small\" \r\n                color=\"primary\"\r\n                startIcon={<SearchIcon />}\r\n              >\r\n                Apply Filters\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {\r\n            searchDrawer && <SwipeableDrawer\r\n              open={searchDrawer}\r\n              onClose={toggleDrawer(false)}\r\n              onOpen={toggleDrawer(true)}\r\n            >\r\n              {list()}\r\n            </SwipeableDrawer>\r\n          }\r\n\r\n          {props.issues && props.issues.length === 0 \r\n            ? <p style={{padding: 10}}>No issues yet!</p> \r\n            : (view \r\n            ? <IssueGrid\r\n                setAlertOpen={setAlertOpen} \r\n                issues={props.issues} \r\n                customization={state} \r\n              /> \r\n            : <IssueList setAlertOpen={setAlertOpen} issues={props.issues} customization={state} />)\r\n          }\r\n\r\n          {\r\n          open && <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Customization Area</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Toggle the field you don't want to view...\r\n              </DialogContentText>\r\n              <FormGroup>\r\n                {\r\n                  Object.keys(state).map(k => (\r\n                    <FormControlLabel\r\n                      disabled={k === \"description\"}\r\n                      key={k}\r\n                      control={\r\n                        <UiSwitch\r\n                          checked={state[k]}\r\n                          onChange={handleChange}\r\n                          name={k}\r\n                          color=\"primary\"\r\n                        />\r\n                      }\r\n                      label={k[0].toUpperCase() + k.replace(/([a-z0-9])([A-Z])/g, '$1 $2').substring(1)}\r\n                    />\r\n                  ))\r\n                }\r\n              </FormGroup>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Close\r\n              </Button>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                Save\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n          }\r\n\r\n          {alertOpen && <AlertDialog \r\n            alertOpen={alertOpen} \r\n            setAlertOpen={setAlertOpen}\r\n            dialogTitle={dialogTitle}\r\n            dialogMessage={dialogMessage}\r\n          />}\r\n\r\n        </Route>\r\n        <Route path=\"/issues/view/:id\" exact>\r\n          <ViewIssue issues={props.issues} />\r\n        </Route>\r\n        <Route path=\"/issues/edit/:id\" exact>\r\n          <EditIssue />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  //console.log(\"[AllIssuesPage] \", state);\r\n  return {\r\n    issues: state.issues,\r\n    users: state.users,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(IssueActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AllIssuesPage));\r\n","import React from \"react\"\r\n\r\nconst About = () => {\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <p>\r\n        <b>Application Name-</b> Issue Tracker\r\n      </p>\r\n      <p>\r\n        <b>Front End-</b>\r\n      </p>\r\n      <ul>\r\n        <li>React JS</li>\r\n        <li>Material UI</li>\r\n        <li>Redux</li>\r\n        <li>React Router</li>\r\n      </ul>\r\n      <p>\r\n        <b>Back End-</b>\r\n      </p>\r\n      <ul>\r\n        <li>JSON Server</li>\r\n      </ul>\r\n      <p>\r\n        <b>Features/Functionality-</b>\r\n      </p>\r\n      <ul>\r\n        <li>View all issues and filter them without logging in</li>\r\n        <li>Sign up to Add or Edit a issue</li>\r\n        <li>After logging in you can Add, View, Edit, Delete issues</li>\r\n        <li>Customize the fields you want to view</li>\r\n        <li>Manage issues in 2 views- Grid View and List View</li>\r\n        <li>View chart of all the issues, severity and status wise</li>\r\n        <li>Apply search filter on description, status and severity</li>\r\n        <li>and many more...</li>\r\n      </ul>\r\n      <p>\r\n        <b>Design and Developed by-</b>\r\n      </p>\r\n      <p>Yash Patni</p>\r\n      <a href=\"mailto:yash.s.patni@gmail.com\" target=\"_blank\" rel=\"noreferrer\">\r\n        yash.s.patni@gmail.com\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from \"react\";\r\nimport { withRouter, Redirect, Prompt } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormik } from 'formik'\r\nimport * as yup from 'yup'\r\nimport moment from \"moment\";\r\nimport {\r\n  Button,\r\n  FormLabel,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  TextField,\r\n  InputLabel,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { v4 } from \"uuid\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as IssueActions from \"../actions/IssueActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    minWidth: 350,\r\n  },\r\n}));\r\n\r\nconst validationSchema = yup.object({\r\n  description: yup\r\n    .string('Description')\r\n    .required('Issue description is required'),\r\n})\r\n\r\nconst AddIssue = (props) => {\r\n  const classes = useStyles();\r\n  const [isDirty, setIsDirty] = React.useState(false)\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      description: \"\",\r\n      severity: \"Minor\",\r\n      status: \"Open\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (event) => {\r\n      setIsDirty(false);\r\n      //setDidSubmit(true);\r\n      const issue = {\r\n        id: v4(),\r\n        description: formik.values.description,\r\n        severity: formik.values.severity,\r\n        status: formik.values.status,\r\n        createdDate: moment().format('MMMM Do YYYY'),\r\n        lastUpdated: moment().format('MMMM Do YYYY'),\r\n        resolvedDate: null,\r\n        loggedBy: props.users.id,\r\n        lastUpdatedBy: props.users.id,\r\n        loggedByName: props.users.firstName + \" \" + props.users.lastName,\r\n        lastUpdatedByName: props.users.firstName + \" \" + props.users.lastName\r\n      };\r\n      //console.log(issue);\r\n      props.actions.addIssue(issue);\r\n      props.history.push(\"/issues\");\r\n    },\r\n  });\r\n\r\n  if (!props.users.isAuthenticated) {\r\n    //showAlert()\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\r\n      <h1>Add Issue</h1>\r\n      <form onSubmit={formik.handleSubmit} onChange={() => setIsDirty(true)} autoComplete=\"off\">\r\n        <TextField\r\n          className={classes.formControl}\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          value={formik.values.description}\r\n          onChange={formik.handleChange}\r\n          error={formik.touched.description && Boolean(formik.errors.description)}\r\n          helperText={formik.touched.description && formik.errors.description}\r\n        />\r\n        <br></br>\r\n        <br></br>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"severity\">Severity</InputLabel>\r\n          <Select\r\n            labelId=\"Severity\"\r\n            id=\"severity\"\r\n            name=\"severity\"\r\n            value={formik.values.severity}\r\n            onChange={formik.handleChange}\r\n          >\r\n            <MenuItem key=\"1\" value={\"Critical\"}>Critical</MenuItem>\r\n            <MenuItem key=\"2\" value={\"Major\"}>Major</MenuItem>\r\n            <MenuItem key=\"3\" value={\"Minor\"}>Minor</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Status</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Status\"\r\n            name=\"status\"\r\n            value={formik.values.status}\r\n            onChange={formik.handleChange}\r\n          >\r\n            <FormControlLabel \r\n              value=\"Open\" \r\n              control={<Radio />} \r\n              label=\"Open\" \r\n            />\r\n            {/*\r\n            <FormControlLabel\r\n              value=\"In Progress\"\r\n              control={<Radio />}\r\n              label=\"In Progress\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"Closed\"\r\n              control={<Radio />}\r\n              label=\"Closed\"\r\n            />\r\n            */}\r\n          </RadioGroup>\r\n        </FormControl>\r\n        <br></br>\r\n        <br></br>\r\n        <Button fullWidth type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </form>\r\n      <Prompt \r\n        when={isDirty} \r\n        message=\"All changes will be lost, Are you sure you want to continue ?\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    issues: state.issues,\r\n    users: state.users,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(IssueActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddIssue));\r\n","import axios from \"axios\"\n\nconst URL =\n  \"https://my-json-server.typicode.com/yash0patni/issue_tracker_server\"\n\nclass UserApi {\n  static async loginUser(user, cb) {\n    try {\n      const res = await axios.get(`${URL}/users/${user.id}`)\n      if (user.password === res.data.password) {\n        cb(res.data)\n      } else {\n        cb({ error: \"Password is incorrect\" })\n      }\n    } catch (err) {\n      cb({ error: \"Email id doesn't exist, please check or signup\" })\n    }\n  }\n\n  static async signupUser(user, cb) {\n    try {\n      const res = await axios.post(`${URL}/users`, user, {\n        \"Content-Type\": \"application/json\",\n      })\n      cb(res.data)\n    } catch (err) {\n      cb({ error: \"Email id already in use or Already registered\" })\n    }\n  }\n}\n\nexport default UserApi\n","import UserApi from \"../data/UserApi\";\nimport * as ActionTypes from \"./ActionTypes\";\n\nexport function loginUser(user) {\n    //console.log(\"loginUser\");\n    return function (dispatch) {\n        return UserApi.loginUser(user, (userData) => \n            dispatch({\n                type: ActionTypes.LOGIN_USER,\n                userData: userData,\n            })\n        )\n    }\n}\n\nexport function signupUser(user) {\n    //console.log(\"signupUser\");\n    return function (dispatch) {\n        return UserApi.signupUser(user, (userData) => \n            dispatch({\n                type: ActionTypes.SIGNUP_USER,\n                userData: userData,\n            })\n        )\n    }\n}\n\nexport function logoutUser() {\n    //console.log(\"logoutUser\");\n    return function (dispatch) {\n        return dispatch({\n            type: ActionTypes.LOGOUT_USER,\n        })\n    }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, Menu, MenuItem} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n//import MenuIcon from '@material-ui/icons/Menu';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"../actions/IssueActions\";\nimport * as UserActions from \"../actions/UserActions\";\nimport { withRouter, NavLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n\tnavbarItem: {\n    color: \"white\",\n    marginRight: \"10px\",\n    textDecoration: \"none\",\n\t\tfontSize: \"14px\",\n\t\tfontFamily: \"Helvetica\"\n  },\n  isActive: {\n    color: \"red\"\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/*<IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>*/}\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link style={{color: \"white\", textDecoration: \"none\"}} to=\"/\">Issue Tracker</Link>\n          </Typography>\n\t\t\t\t\t<NavLink className={classes.navbarItem} activeClassName={classes.isActive} to=\"/about\">\n\t\t\t\t\t\tABOUT\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink className={classes.navbarItem} activeClassName={classes.isActive} to=\"/issues\">\n\t\t\t\t\t\tISSUES\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<NavLink\n            id=\"addIssue\"\n            onClick={() => {\n              if (!props.users.isAuthenticated) {\n                alert(\"You are not logged in hence redirecting to login page\");\n                //return <Redirect to=\"/\" />\n              }\n            }} \n            className={classes.navbarItem}\n            activeClassName={classes.isActive}\n            to=\"/addIssue\"\n          >\n\t\t\t\t\t\tADD ISSUE\n\t\t\t\t\t</NavLink>\n          {props.users.isAuthenticated && (\n            <div id=\"userMenu\">\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem \n                  onClick={() => {\n                    handleClose();\n                    props.history.push(\"/profile\");\n                  }}\n                >\n                  {props.users.firstName}\n                </MenuItem>\n                <MenuItem \n                  onClick={() => {\n                    handleClose();\n                    props.userActions.logoutUser();\n                  }}\n                >\n                  Logout\n                </MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    issues: state.issues,\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(IssueActions, dispatch),\n    userActions: bindActionCreators(UserActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Collapse } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { withRouter, Link } from 'react-router-dom';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"../actions/IssueActions\";\nimport * as UserActions from \"../actions/UserActions\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\t//height: \"80vh\",\n\t\tjustifyContent: \"center\",\n\t\tflexDirection: \"column\"\n  },\n\tformControl: {\n    minWidth: 350,\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\"\n  },\n}));\n\nconst Login = (props) => {\n\t//console.log(\"[Login.js] \", props);\n\tconst classes = useStyles();\n\n\tconst [open, setOpen] = useState(true);\n\n\tconst [data, setData] = useState({\n\t\tid: \"\",\n\t\tpassword: \"\"\n\t});\n\n\tconst handleChange = (event) => {\n\t\tsetData({...data, [event.target.name]: event.target.value});\n\t}\n\n\tconst onSubmit = async (event) => {\n\t\tsetOpen(true);\n\t\tevent.preventDefault();\n\t\tconsole.log(props);\n\t\tprops.userActions.loginUser(data);\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<form onSubmit={onSubmit} className={classes.formControl}>\n\t\t\t\t<TextField \n\t\t\t\t\tid=\"email\" \n\t\t\t\t\tlabel=\"Email\" \n\t\t\t\t\ttype=\"email\" \n\t\t\t\t\tname=\"id\"\n\t\t\t\t\tvalue={data[\"id\"]} \n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<br></br>\n\t\t\t\t<TextField \n\t\t\t\t\tid=\"password\" \n\t\t\t\t\tlabel=\"Password\" \n\t\t\t\t\ttype=\"password\" \n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={data[\"password\"]} \n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<br></br>\n\t\t\t\t{\n\t\t\t\t\tprops.users.error\n\t\t\t\t\t\t? (<><Collapse in={open}>\n\t\t\t\t\t\t\t\t<Alert \n\t\t\t\t\t\t\t\t\tseverity=\"error\" \n\t\t\t\t\t\t\t\t\tonClose={() => {setOpen(false)}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{props.users.error}\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t</Collapse><br></br></>)\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t\t<p>Don't have an account? <Link to=\"/signup\">Signup here</Link></p>\n\t\t</div>\n\t)\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t  issues: state.issues,\n\t\tusers: state.users\n\t};\n  }\n  \nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tactions: bindActionCreators(IssueActions, dispatch),\n\t\tuserActions: bindActionCreators(UserActions, dispatch)\n\t};\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Chart } from \"react-google-charts\";\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"../actions/IssueActions\";\nimport * as UserActions from \"../actions/UserActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tpadding: 10,\n  },\n  chart: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    padding: \"10px\"\n  }\n}));\n\nconst IssueChart = (props) => {\n  const classes = useStyles();\n\n  const issues = props.issues;\n\n  const statusOpen = issues.filter(issue => issue.status === \"Open\").length;\n  const statusInProgress = issues.filter(issue => issue.status === \"In Progress\").length;\n  const statusClosed = issues.filter(issue => issue.status === \"Closed\").length;\n  \n  const severityMinor = issues.filter(issue => issue.severity === \"Minor\").length;\n  const severityMajor = issues.filter(issue => issue.severity === \"Major\").length;;\n  const severityCritical = issues.filter(issue => issue.severity === \"Critical\").length;\n\n  return (\n    <div className={classes.root}>\n      <p>Issues Chart</p>\n      <div className={classes.chart}>\n        <Chart\n          width=\"80vw\"\n          chartType=\"PieChart\"\n          loader={<div>Loading Chart</div>}\n          data={[\n            ['Status', 'Counts'],\n            ['Open', statusOpen],\n            ['In Progress', statusInProgress],\n            ['Closed', statusClosed],\n          ]}\n          options={{\n            title: 'Status wise chart',\n          }}\n          rootProps={{ 'data-testid': '1' }}\n        />\n        <Chart\n          width=\"80vw\"\n          chartType=\"PieChart\"\n          loader={<div>Loading Chart</div>}\n          data={[\n            ['Severity', 'Counts'],\n            ['Minor', severityMinor],\n            ['Major', severityMajor],\n            ['Critical', severityCritical],\n          ]}\n          options={{\n            title: 'Severity wise chart',\n          }}\n          rootProps={{ 'data-testid': '1' }}\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t  issues: state.issues,\n\t\tusers: state.users\n\t};\n  }\n  \nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tactions: bindActionCreators(IssueActions, dispatch),\n\t\tuserActions: bindActionCreators(UserActions, dispatch)\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(IssueChart))\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Button } from \"@material-ui/core\"\nimport { withRouter } from \"react-router-dom\"\nimport { bindActionCreators } from \"redux\"\nimport { connect } from \"react-redux\"\nimport * as IssueActions from \"../actions/IssueActions\"\nimport * as UserActions from \"../actions/UserActions\"\nimport Login from \"./Login\"\nimport IssueChart from \"./IssueChart\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: 10,\n  },\n  nav: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    //paddingTop: \"10px\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    paddingBottom: 0,\n  },\n  navRight: {\n    display: \"flex\",\n    paddingRight: \"10px\",\n    //margin: \"10px\",\n    justifyContent: \"space-between\",\n  },\n}))\n\nconst Welcome = (props) => {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.root}>\n      {props.users.isAuthenticated ? (\n        <>\n          <div className={classes.nav}>\n            <p>Welcome {props.users.firstName}</p>\n            <div className={classes.navRight}>\n              <Button color=\"secondary\" onClick={props.userActions.logoutUser}>\n                Logout\n              </Button>\n            </div>\n          </div>\n          <IssueChart />\n        </>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            height: \"80vh\",\n          }}\n        >\n          <p>Welcome Guest,</p>\n          <p>Login here with Email- <b>john.doe@test.com</b> and Password- <b>Test@123</b></p>\n\n          <Login />\n          <p>or use the tracker with limited access.</p>\n          <p><b>Note- </b>As the Backend is hosted on JSON Server hence whatever data you entered and saved will be present only locally.</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    issues: state.issues,\n    users: state.users,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(IssueActions, dispatch),\n    userActions: bindActionCreators(UserActions, dispatch),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Welcome))\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Collapse } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { withRouter, Link } from 'react-router-dom';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"../actions/IssueActions\";\nimport * as UserActions from \"../actions/UserActions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\theight: \"80vh\",\n\t\tjustifyContent: \"center\",\n\t\tflexDirection: \"column\"\n  },\n\tformControl: {\n    minWidth: 350,\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\"\n  },\n}));\n\nconst Signup = (props) => {\n\tconst classes = useStyles();\n\n\tconst [open, setOpen] = useState(true);\n\n\tconst [data, setData] = useState({\n\t\tid: \"\",\n\t\tpassword: \"\",\n\t\tfirstName: \"\",\n\t\tlastName: \"\",\n\t\tcontact: \"\",\n\t\tlocation: \"\"\n\t});\n\n\tconst handleChange = (event) => {\n\t\tsetData({...data, [event.target.name]: event.target.value});\n\t}\n\n\tconst onSubmit = (event) => {\n\t\tsetOpen(true);\n\t\tevent.preventDefault();\n\t\tprops.userActions.signupUser(data);\n\t\tsetData({\n\t\t\tid: \"\",\n\t\t\tpassword: \"\",\n\t\t\tfirstName: \"\",\n\t\t\tlastName: \"\",\n\t\t\tcontact: \"\",\n\t\t\tlocation: \"\"\n\t\t});\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<form onSubmit={onSubmit} className={classes.formControl}>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<TextField id=\"fname\" name=\"firstName\" value={data[\"firstName\"]} onChange={handleChange} label=\"First Name\" type=\"text\" required/>\n\t\t\t\t<br></br>\n\t\t\t\t<TextField id=\"lname\" name=\"lastName\" value={data[\"lastName\"]} onChange={handleChange} label=\"Last Name\" type=\"text\" required/>\n\t\t\t\t<br></br>\n\t\t\t\t<TextField id=\"contact\" name=\"contact\" value={data[\"contact\"]} onChange={handleChange} label=\"Contact\" type=\"number\" required/>\n\t\t\t\t<br></br>\n\t\t\t\t<TextField id=\"location\" name=\"location\" value={data[\"location\"]} onChange={handleChange} label=\"Location\" type=\"text\" required/>\n\t\t\t\t<br></br>\n\t\t\t\t<TextField id=\"email\" name=\"id\" value={data[\"id\"]} onChange={handleChange} label=\"Email\" type=\"email\" required/>\n\t\t\t\t<br></br>\n\t\t\t\t<TextField id=\"password\" name=\"password\" value={data[\"password\"]} onChange={handleChange} label=\"Password\" type=\"password\" required/>\n\t\t\t\t<br></br>\n\t\t\t\t{\n\t\t\t\t\tprops.users.error\n\t\t\t\t\t\t? (<><Collapse in={open}>\n\t\t\t\t\t\t\t\t<Alert \n\t\t\t\t\t\t\t\t\tseverity=\"error\" \n\t\t\t\t\t\t\t\t\tonClose={() => {setOpen(false)}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{props.users.error}\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t</Collapse><br></br></>)\n\t\t\t\t\t\t: props.users.id ? (<><Collapse in={open}>\n\t\t\t\t\t\t\t<Alert \n\t\t\t\t\t\t\t\tseverity=\"success\" \n\t\t\t\t\t\t\t\tonClose={() => {setOpen(false)}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSuccessfully registered\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t</Collapse><br></br></>) : null\n\t\t\t\t}\n\t\t\t\t<Button type=\"submit\" variant=\"contained\" color=\"primary\">\n\t\t\t\t\tSignup\n\t\t\t\t</Button>\n\t\t\t</form>\n\t\t\t<p>Already have an account? <Link to=\"/\">Login here</Link></p>\n\t\t</div>\n\t)\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t  issues: state.issues,\n\t\tusers: state.users\n\t};\n  }\n  \nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tactions: bindActionCreators(IssueActions, dispatch),\n\t\tuserActions: bindActionCreators(UserActions, dispatch)\n\t};\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Signup));\n","import React from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"../actions/IssueActions\";\n\nconst UserProfile = (props) => {\n\n  if (!props.users.isAuthenticated) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div style={{padding: \"10px\"}}>\n      <h2 style={{textAlign: \"center\"}}>My profile</h2>\n      <p>Name: {props.users.firstName + \" \" + props.users.lastName}</p>\n      <p>Email: {props.users.id}</p>\n      <p>Contact: {props.users.contact}</p>\n      <p>Location: {props.users.location}</p>\n    </div>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    issues: state.issues,\n    users: state.users,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(IssueActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserProfile));\n","import React from \"react\";\nimport AllIssuesPage from \"./components/AllIssuesPage\";\nimport About from \"./components/About\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport AddIssue from \"./components/AddIssue\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as IssueActions from \"./actions/IssueActions\";\nimport * as UserActions from \"./actions/UserActions\";\nimport Header from \"./components/Header\";\nimport Welcome from \"./components/Welcome\";\nimport Signup from \"./components/Signup\";\nimport UserProfile from \"./components/UserProfile\";\n\nconst App = (props) => {\n  \n  return (\n    <div style={{width: \"100%\"}}>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Welcome />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/issues\">\n          <AllIssuesPage />\n        </Route>\n        <Route path=\"/addIssue\">\n          <AddIssue />\n        </Route>\n        <Route path=\"/profile\">\n          <UserProfile />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  //console.log(\"[App] \", state);\n  return {\n    issues: state.issues,\n    users: state.users\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(IssueActions, dispatch),\n    userActions: bindActionCreators(UserActions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\nconst issues = {\n    issues: [],\n};\n*/\n\nconst issues = [];\n\nexport default issues;","const user = {\n    isAuthenticated: false,\n};\n\nexport default user;","import { combineReducers } from \"redux\";\nimport issueReducer from \"./issueReducer\";\nimport userReducer from \"./userReducer\";\n\nconst rootReducer = combineReducers({\n    issues: issueReducer,\n    users: userReducer\n});\n\nexport default rootReducer;","import * as ActionTypes from \"../actions/ActionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function issueReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase ActionTypes.INITIALIZE:\n\t\t\treturn action.issues;\n\t\t\n\t\tcase ActionTypes.ADD_ISSUE:\n\t\t\treturn [\n\t\t\t\tObject.assign({}, action.issue),\n\t\t\t\t...state\n\t\t\t];\n\n\t\tcase ActionTypes.EDIT_ISSUE:\n\t\t\tlet updatedState1 = state.filter((issue) => issue.id !== action.issue.id);\n\t\t\tconsole.log(\"action \", action);\n\t\t\treturn [\n\t\t\t\tObject.assign({}, action.issue),\n\t\t\t\t...updatedState1\n\t\t\t];\n\t\t\n\t\tcase ActionTypes.DELETE_ISSUE:\n\t\t\tlet updatedState = state.filter((issue) => issue.id !== action.id);\n\t\t\treturn [\n\t\t\t\t...updatedState,\n\t\t\t];\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import * as ActionTypes from \"../actions/ActionTypes\";\nimport userState from \"./userState\";\n\nexport default function userReducer(state=userState, action) {\n    switch (action.type) {\n        case ActionTypes.LOGIN_USER:\n            console.log(\"loginUser\", action);\n            if (action.userData.error) {\n                return {\n                    isAuthenticated: false,\n                    ...action.userData\n                }\n            }\n            else {\n                return {\n                    isAuthenticated: true,\n                    ...action.userData\n               }\n            }\n\n        case ActionTypes.SIGNUP_USER:\n            console.log(\"signupUser\", action);\n            return {\n                isAuthenticated: false,\n                ...action.userData\n            }\n\n        case ActionTypes.LOGOUT_USER:\n            console.log(\"logoutUser\", action);\n            return {\n                isAuthenticated: false,\n            }\n    \n        default:\n            return state;\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\nimport { initIssues } from \"./actions/IssueActions\";\nimport initialState from \"./reducers/initialState\";\nimport userState from \"./reducers/userState\";\n\nconst store = configureStore({\"issues\": initialState, \"users\": userState});\nstore.dispatch(initIssues(\"\"));\n//store.dispatch()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from '../reducers';\nimport thunk from \"redux-thunk\";\n\nconst configureStore = (initialState) => {\n    return createStore(\n        rootReducer,\n        initialState,\n        applyMiddleware(thunk)\n    )\n}\n\nexport default configureStore;"],"sourceRoot":""}